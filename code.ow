设置
{
	主程序
	{
		描述: "代码 BXR95 作者：科比卜莱恩特"
		模式名称: "T T 牢大我们想你了 T T"
	}

	大厅
	{
		比赛语音聊天: 启用
		自由混战人数上限: 11
		观战者人数上限: 12
		队列中的玩家可以加入: 是
	}

	模式
	{
		决斗先锋
		{
			启用地图
			{
			}
		}

		禁用 勇夺锦旗
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 占领要点
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 占领要点
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 团队死斗
		{
			重装职责被动生命值加成: 始终启用
		}

		攻击护送
		{
			重装职责被动生命值加成: 始终启用

			启用地图
			{
			}
		}

		禁用 攻击护送
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 攻防作战
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 攻防作战
		{
			重装职责被动生命值加成: 始终启用
		}

		攻防阵线
		{
			重装职责被动生命值加成: 始终启用

			启用地图
			{
			}
		}

		机动推进
		{
			重装职责被动生命值加成: 始终启用

			启用地图
			{
			}
		}

		死斗
		{
			重装职责被动生命值加成: 始终启用

			启用地图
			{
				圣诞节国王大道 972777519512063901
			}
		}

		禁用 突击模式
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 训练靶场
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 赏金猎手
		{
			重装职责被动生命值加成: 始终启用
		}

		运载目标
		{
			重装职责被动生命值加成: 始终启用

			启用地图
			{
			}
		}

		禁用 运载目标
		{
			重装职责被动生命值加成: 始终启用
		}

		禁用 闪点作战
		{
			重装职责被动生命值加成: 始终启用
		}

		综合
		{
			复生时间: 0%
			游戏模式开始: 手动
			英雄限制: 关闭
			随机英雄复生: 开启
		}
	}

	英雄
	{
		综合
		{
			末日铁拳
			{
				仅爆头有效: 开启
				伤害量: 10%
				受到伤害量: 10%
				受到治疗量: 500%
				悍猛格挡充能速度: 500%
				悍猛格挡冷却时间: 0%
				战斗时终极技能充能速度 毁天灭地: 0%
				无需装弹: 开启
				毁天灭地击退倍率: 300%
				火箭重拳冷却时间: 0%
				火箭重拳击退倍率: 300%
				生命值: 500%
				终极技能充能速度（毁天灭地）: 500%
				终极技能持续时间: 500%
				终极技能自动充能速度 毁天灭地: 500%
				裂地重拳冷却时间: 0%
			}

			启用英雄
			{
				末日铁拳
			}
		}
	}

	扩展
	{
		光束声音
		爆炸声音
		播放更多效果
	}
}

变量
{
	全局:
		2: GR_screen
		5: GR_pos
		6: GR_temp
		8: raw
		9: GR_idx1
		10: GR_idx2
		12: GR_row
		13: GR_col
		14: GR_invisiable
}

子程序
{
	0: GR_generate
	1: GR_load
}

规则("By Zezombye - Setup <­tx> bypass to get an unsanitized '\\<' character <fgFFFF00FF>(also you can get colors in rule names now lmf")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		生成机器人(全部英雄, 主机玩家, 假, 空, 空);
		开始为机器人强制设置名称(最后创建的实体, 自定义字符串(
			"______________________________________________________________________________________________________________________________〼"));
		全局.A = 字符串分割(首个(最后创建的实体), 空数组);
		开始为机器人强制设置名称(最后创建的实体, 自定义字符串(
			"______________________________________________________________________________________________________________________________ࡀ"));
		全局.A = 截取字符串(字符串替换(自定义字符串(
			"______________________________________________________________________________________________________________________________〼"),
			全局.A, 首个(最后创建的实体)), 126, 真);
		移除所有机器人;
	}
}

规则("图像 创建")
{
	事件
	{
		子程序;
		GR_generate;
	}

	动作
	{
		For 全局变量(GR_idx1, 0, 64, 1);
			创建地图文本(本地玩家.V ? 本地玩家 : 空, 全局.GR_screen[全局.GR_idx1], 本地玩家 + 1414 * 面朝方向(本地玩家) - 13 * (单次赋值(全局.GR_idx1) - 32) * 归一化(矢量积(归一化(矢量积(面朝方向(
				本地玩家), 上)), 面朝方向(本地玩家))), 0.500, 不要截取, 可见和位置, 颜色(白色), 默认可见度);
			禁用 创建地图文本(本地玩家.V ? 本地玩家 : 空, 全局.GR_screen[全局.GR_idx1], 本地玩家 + 1414 * 面朝方向(本地玩家) - (13 * 单次赋值(全局.GR_idx1) + 32) * 归一化(矢量积(归一化(矢量积(面朝方向(
				本地玩家), 上)), 面朝方向(本地玩家))), 0.500, 不要截取, 可见和位置, 颜色(白色), 默认可见度);
			禁用 创建地图文本(本地玩家.V ? 本地玩家 : 空, 全局.GR_screen[全局.GR_idx1], 本地玩家 + 1414 * 面朝方向(本地玩家) - (13 * 单次赋值(全局.GR_idx1) + 32) * 归一化(矢量积(矢量积(面朝方向(
				事件玩家), 上), 面朝方向(事件玩家))), 0.500, 不要截取, 可见和位置, 颜色(白色), 默认可见度);
			禁用 创建地图文本(本地玩家.V ? 本地玩家 : 空, 全局.GR_screen[全局.GR_idx1], 本地玩家 + 1414 * 面朝方向(本地玩家) - (13 * 单次赋值(全局.D) + 32) * 归一化(矢量积(矢量积(面朝方向(事件玩家), 上),
				面朝方向(事件玩家))), 0.500, 不要截取, 可见和位置, 颜色(白色), 默认可见度);
			禁用 创建地图文本(全局.GR_invisiable ? 所有玩家(队伍2) : 空, 全局.GR_screen[全局.GR_idx1], 全局.GR_pos + 单次赋值(全局.GR_idx1 - 32) * 相距距离(全局.GR_pos, 所选位置(本地玩家))
				* 0.009 * 下, 0.500, 根据表面截取, 可见和位置, 颜色(白色), 默认可见度);
			禁用 创建地图文本(所有玩家(所有队伍), 全局.GR_screen[全局.D], 矢量(1000, -13 * 单次赋值(全局.D), 1000), 0.500, 不要截取, 可见和位置, 颜色(白色), 默认可见度);
			等待(0.200, 无视条件);
		End;
		禁用 创建地图文本(全局.GR_invisiable ? 所有玩家(所有队伍) : 空, 全局.GR_screen[全局.GR_idx1], 重生点(队伍1) + 单次赋值(全局.GR_idx1) * 相距距离(重生点(队伍1), 所选位置(本地玩家)),
			0.500, 不要截取, 可见和位置, 颜色(白色), 默认可见度);
		禁用 创建地图文本(全局.GR_invisiable ? 所有玩家(所有队伍) : 空, 全局.GR_screen[全局.GR_idx1], 重生点(队伍1) + 单次赋值(全局.GR_idx1 - 32) * 相距距离(重生点(队伍1), 所选位置(本地玩家))
			* 本地玩家.P * 0.018 * 下, 本地玩家.P, 不要截取, 可见和位置, 颜色(白色), 默认可见度);
	}
}

规则("图像 加载数据")
{
	事件
	{
		子程序;
		GR_load;
	}

	动作
	{
		全局.GR_row = 0;
		全局.GR_col = 0;
		全局.GR_screen = 空数组;
		For 全局变量(GR_idx1, 0, 64, 1);
			全局.GR_temp = 自定义字符串("");
			For 全局变量(GR_idx2, 0, 64, 1);
				If(全局.GR_col == 16);
					全局.GR_col = 0;
					全局.GR_row += 1;
					禁用 等待(0.350, 无视条件);
				End;
				全局.GR_temp = 自定义字符串("{0}{1}fg{2}>█", 全局.GR_temp, 全局.A, 单次赋值(截取字符串(全局.raw[全局.GR_row], 8 * 全局.GR_col, 8)));
				全局.GR_col += 1;
			End;
			等待(0.250, 无视条件);
			全局.GR_screen[全局.GR_idx1] = 单次赋值(全局.GR_temp);
		End;
	}
}

禁用 规则("规则 6")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局.GR_invisiable == 真;
	}

	动作
	{
		等待(5, 无视条件);
		全局.GR_invisiable = 假;
	}
}

禁用 规则("规则 6")
{
	事件
	{
		持续 - 全局;
	}

	条件
	{
		全局.GR_invisiable == 假;
	}

	动作
	{
		等待(5, 无视条件);
		全局.GR_invisiable = 真;
	}
}

禁用 规则("规则 8")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		创建HUD文本(所有玩家(所有队伍), 全局.GR_pos, 空, 空, 左边, 0, 颜色(白色), 颜色(白色), 颜色(白色), 可见和字符串, 默认可见度);
	}
}

规则("规则 8")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	动作
	{
		事件玩家.V = 1;
		事件玩家.S = 自定义字符串("");
	}
}

规则("规则 10")
{
	事件
	{
		子程序;
		Sub2;
	}

	动作
	{
		事件玩家.T = 自定义字符串("我回来了！孩子们！");
		禁用 创建地图文本(所有玩家(所有队伍), 事件玩家.S, 事件玩家, 2, 不要截取, 可见，位置和字符串, 颜色(白色), 始终可见);
		禁用 创建地图文本(所有玩家(所有队伍), 事件玩家.S, 本地玩家 + 1414 * 面朝方向(本地玩家) - 13 * 45 * 归一化(矢量积(归一化(矢量积(面朝方向(本地玩家), 上)), 面朝方向(本地玩家))), 2, 不要截取, 可见，位置和字符串,
			颜色(橙色), 始终可见);
		事件玩家.S = 自定义字符串("");
		While(字符串长度(事件玩家.T) > 0);
			事件玩家.S = 自定义字符串("{0}{1}", 事件玩家.S, 字符串中字符(事件玩家.T, 0));
			事件玩家.T = 截取字符串(事件玩家.T, 1, 字符串长度(事件玩家.T) - 1);
			播放效果(所有玩家(所有队伍), 布丽吉塔恢复包护甲声音, 颜色(白色), 事件玩家, 80);
			等待(随机实数(0.300, 0.400), 无视条件);
		End;
	}
}

规则("规则 10")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		禁用 创建地图文本(本地玩家.V ? 本地玩家 : 空, 本地玩家.S, 本地玩家 + 1414 * 面朝方向(本地玩家) - 13 * 45 * 归一化(矢量积(归一化(矢量积(面朝方向(本地玩家), 上)), 面朝方向(本地玩家))), 2, 不要截取,
			可见，位置和字符串, 颜色(橙色), 始终可见);
		禁用 创建地图文本(本地玩家.V ? 本地玩家 : 空, 自定义字符串("{0}{1}", 本地玩家.S, 取整(总计消耗时间, 下) % 2 ? 自定义字符串(" ") : 自定义字符串("_")), 本地玩家 + 1414 * 面朝方向(本地玩家)
			- 13 * 45 * 归一化(矢量积(归一化(矢量积(面朝方向(本地玩家), 上)), 面朝方向(本地玩家))), 2, 不要截取, 可见，位置和字符串, 颜色(橙色), 始终可见);
		创建地图文本(本地玩家.V ? 本地玩家 : 空, 本地玩家.S, 本地玩家 + 1414 * 面朝方向(本地玩家) - 13 * 45 * 归一化(矢量积(归一化(矢量积(面朝方向(本地玩家), 上)), 面朝方向(本地玩家))), 4, 不要截取,
			可见，位置和字符串, 颜色(橙色), 始终可见);
	}
}

规则("规则 6")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		等待(5, 无视条件);
		禁用 调用子程序(GR_load);
		禁用 等待(80, 无视条件);
		禁用 全局.GR_pos = 矢量(0, 0.850, 0) + 所选位置(此栏位的玩家(0, 队伍1));
		禁用 追踪全局变量频率(GR_pos, 矢量(0, 0.850, 0) + 所选位置(此栏位的玩家(0, 队伍1)), 60, 速率及最终值);
		调用子程序(GR_load);
		调用子程序(GR_generate);
		全局.GR_invisiable = 真;
	}
}

规则("规则 11")
{
	事件
	{
		持续 - 每名玩家;
		双方;
		全部;
	}

	条件
	{
		(全局.GR_invisiable == 1) == 真;
	}

	动作
	{
		等待(10, 无视条件);
		调用子程序(Sub2);
	}
}

规则("图像 储存数据")
{
	事件
	{
		持续 - 全局;
	}

	动作
	{
		全局.raw = 数组(自定义字符串(
		        ...
		);
	}
}
